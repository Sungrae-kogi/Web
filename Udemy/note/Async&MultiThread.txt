비동기와 멀티스레드가 같은 개념이라고 생각되어 찾아보았고 납득이 되는 내용을 일부 찾음.

출처 : https://lucky516.tistory.com/207#recentComments
출처 : https://velog.io/@minbo2002/%EC%8A%A4%EB%A0%88%EB%93%9C%EB%A9%80%ED%8B%B0%EC%8A%A4%EB%A0%88%EB%93%9C%EB%8F%99%EA%B8%B0%EB%B9%84%EB%8F%99%EA%B8%B0
출처 : https://jayhyun-hwang.github.io/2021/09/02/The-Difference-Between-Asynchronous-And-Multi-Threading/

동기
일의 순서가 있다. (메인 스레드인 CPU가 다른 메인스레드에게 일을 시키고 그 일이 끝날때까지 CPU는 대기 상태에 있다)

비동기
일의 순서가 없다. (메인 스레드인 CPU가 다른 스레드에게 일을 시키고 메인 스레드인 CPU는 계속해서 일을 한다)


비동기작업인 네트워크 요청, 파일 시스템 reading, DB조회 등의 작업은 CPU 이외의 다른 자원들을 사용한다. 

**다른 자원들이란**
1. 메모리 : 프로그램이 실행되는 동안 필요한 데이터와 코드를 저장하는 공간, 메모리 자원은 CPU 자원과 함께 프로그램 실행 속도에 영향을 미침.
2. 디스크 : 데이터를 저장하는 데 사용되는 자원, 파일 입출력 같은 I/O 작업을 수행할 때 사용.
3. 네트워크 : 컴퓨터 간에 데이터를 주고받을 때 사용되는 자원, 네트워크 자원은 데이터 전송 속도와 지연 시간 등에 영향을 미침
4. 그래픽 카드 : 그래픽 처리를 담당하는 자원, 게임이나 그래픽 프로그램 등에 사용.
5. 입출력 장치 : 키보드, 마우스 등 장치는 사용자와 컴퓨터 간의 상호작용을 위해 사용.


**비동기(async) 비유**

다음과 같은 하루 일과가 있다고 하자

배달음식 시켜서 밥먹기(도착 30분, 밥먹기 1분)
집청소 하기(30분)
 

그리고 사람을 스레드로 비유하자

 

여기서 코드가 sync하게 동작한다면 다음과 같다

음식 도착 30분을 기다리고 밥을 1분동안 먹고 청소를 30분 한다. => 총 소요시간 61분

 

그런데 음식이 배달올 때 까지 기다릴 필요가 있나? 배달오는동안 청소를 하면 그만아닌가?

배달음식 시키지마자 청소시작, 그리고 도착하면 밥먹기 => 총 소요시간 31분

 

이것이 바로 비동기이다. 오래걸리는 일을 기다리지 않고, 바로 다음 작업을 하는것

단! 여기서 조건이 있다. 오래걸리는 일을 cpu가 아닌 다른 자원들이 해 주어야 한다.

 

배달은 배달원(외부자원)이 한다. 즉 내가(스레드, cpu자원) 하지 않는다. 그러기에 다른 작업을 바로 시작할 수 있는거다.
 

가령 자바스크립트에서 async 함수에 네트워크 요청(외부자원 사용)이 아닌, 복잡한 수학계산식(cpu자원 사용)을 넣으면 sync하게 동작한다!


**멀티 스레드 **

하나의 프로그램에서 2개이상의 스레드(프로세스 내에서 실행되는 흐름의 단위)가 동시에 작업을 하는 것.

예를들면 웹 브라우저에서, 서로 다른 두 탭을 통해 두 개의 파일을 다운받는 것
각 탭은 요청된 파일을 다운로드하기 위해 새로운 스레드를 사용하며 서로의 탭이 완료되기를 
기다리지 않으며 동시에 다운로드 한다.

**비동기 vs 멀티스레딩**

멀티스레딩 프로그래밍은 여러 다른 함수들을 동시에 실행하는 것이고, 비동기 프로그래밍은 여러 함수들이
non-blocking으로 실행되는 것이다, 그리고 비동기적 이라는 것은 단일 스레드, 멀티 스레드 모두 적용될 수 있다.

*따라서 멀티스레딩은 비동기 프로그래밍의 한 형태인 것*

그리고 스레딩이란, “너는 물을 끓여. 나는 토마토 소스를 볶을거야.”, “물이 끓으면(When), 나한테 알려줘. 파스타면을 넣을게. 소스가 데워지면(When), 너가 치즈를 넣어줘”, “면과 소스가 완성되면(When), 나는 의자에 앉을게, 너는 서빙해줘. 그 다음에 같이 식사하자.”라고 말하는 것이다. 이 상황에서, 우리는 각 사람(스레드)의 일련의 명령 집합(sequential set of instructions)을 나타내는 “When, Do” 시퀀스를 볼 수 있다.

정리하자면, 멀티스레딩은 작업자(Thread)에 관한 것이고, 비동기는 작업(Task)에 관한 것임을 알 수 있다.